// 模拟实现strstr:strstr(str1,str2)判断str2是否是str1的子串
char* my_strstr(const char* dest, const char* src)
{
	assert(dest);
	assert(src);

	char* start = (char*)dest;//在这里需要强制类型转换成char*
	char* substart = (char*)src;
	char* cp = (char*)dest;//cp就是用来保存首地址的

	while (*cp)
	{
		start = cp;
		while (*start != '\0' && *substart != '\0' && *start == *substart)
		{
			start++;
			substart++;
		}
		if (*substart == '\0')
		{
			return cp;
		}
		substart = (char*)src;
		cp++;//cp++可以得到原起始位置的下一个位置
	}
	return NULL;
}

int main()
{
	const char* str1 = "hello world";
	const char* str2 = "world";
	printf("%s\n", my_strstr(str1, str2));
	getchar();
	return 0;
}
